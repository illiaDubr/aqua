# ./docker/nginx/nginx.conf  — ЕДИНЫЙ ФАЙЛ

user  nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events { worker_connections 1024; }

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;

    # CORS: разрешаем только наш домен
    map $http_origin $cors_origin {
        default "";
        "~^https?://(www\.)?aquataxi\.online$" $http_origin;
    }

    server {
        listen 80;
        server_name aquataxi.online www.aquataxi.online;

        root /var/www/public;
        index index.php index.html;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ \.php$ {
            include fastcgi_params;

            # PHP-FPM в контейнере "app" (из docker-compose, порт 9000)
            fastcgi_pass app:9000;

            # Если у тебя НЕ php-fpm, а php -S/artisan serve — поменяй стратегию (это не FastCGI).
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
        }

        # скрытые файлы
        location ~ /\.(?!well-known).* { deny all; }

        # статика билда (Vite) + CORS
        location /build/ {
            access_log off;
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";

            # preflight (OPTIONS)
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }

            # обычные GET
            if ($cors_origin != "") {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
            }

            try_files $uri $uri/ =404;
        }
    }
}
